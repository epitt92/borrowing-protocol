{
  "address": "0x20D50159aff262f953C8913Ec859Cac13A010b8a",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_mcr",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_mrf",
          "type": "uint256"
        }
      ],
      "name": "NewTokenPriceFeed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "priceAverage",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pricePoint",
          "type": "uint256"
        }
      ],
      "name": "PriceUpdate",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BORROWING_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DECIMAL_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIQUIDATION_RESERVE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_BORROWING_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_INT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERCENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERCENT10",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERCENT_05",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_priceAverage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_pricePoint",
          "type": "uint256"
        }
      ],
      "name": "emitPriceUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "mcr",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "mrf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_mcr",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxRedemptionFeeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setTokenPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "tokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "tokenPriceFeed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "mcr",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mrf",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe2a5b0ce05c8dec1f098aff7d75cdc7ec3d5c55c02fd4172f1a54acd269f2135",
  "receipt": {
    "to": null,
    "from": "0xC74BEd4d5b1110458d954e772272Bc05859b81bD",
    "contractAddress": "0x20D50159aff262f953C8913Ec859Cac13A010b8a",
    "transactionIndex": 116,
    "gasUsed": "686527",
    "logsBloom": "0x
    "blockHash": "0x2a865911c875afc4a9249e468a9a98b7dc1067da8e504f24b426d926282122fb",
    "transactionHash": "0xe2a5b0ce05c8dec1f098aff7d75cdc7ec3d5c55c02fd4172f1a54acd269f2135",
    "logs": [
      {
        "transactionIndex": 116,
        "blockNumber": 36542609,
        "transactionHash": "0xe2a5b0ce05c8dec1f098aff7d75cdc7ec3d5c55c02fd4172f1a54acd269f2135",
        "address": "0x20D50159aff262f953C8913Ec859Cac13A010b8a",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c74bed4d5b1110458d954e772272bc05859b81bd"
        ],
        "data": "0x",
        "logIndex": 423,
        "blockHash": "0x2a865911c875afc4a9249e468a9a98b7dc1067da8e504f24b426d926282122fb"
      },
      {
        "transactionIndex": 116,
        "blockNumber": 36542609,
        "transactionHash": "0xe2a5b0ce05c8dec1f098aff7d75cdc7ec3d5c55c02fd4172f1a54acd269f2135",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000c74bed4d5b1110458d954e772272bc05859b81bd",
          "0x00000000000000000000000026c80cc193b27d73d2c40943acec77f4da2c5bd8"
        ],
        "data": "0x000000000000000000000000000000000000000000000000005da4f5f30ce4d10000000000000000000000000000000000000000000000077a26bd29c080487d00000000000000000000000000000000000000000000753463ceae19fade30d400000000000000000000000000000000000000000000000779c91833cd7363ac000000000000000000000000000000000000000000007534642c530fedeb15a5",
        "logIndex": 424,
        "blockHash": "0x2a865911c875afc4a9249e468a9a98b7dc1067da8e504f24b426d926282122fb"
      }
    ],
    "blockNumber": 36542609,
    "cumulativeGasUsed": "20083102",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "bf3d4309507180ad8123e30dbce5d19e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_mcr\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_mrf\",\"type\":\"uint256\"}],\"name\":\"NewTokenPriceFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priceAverage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePoint\",\"type\":\"uint256\"}],\"name\":\"PriceUpdate\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BORROWING_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DECIMAL_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDATION_RESERVE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BORROWING_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_INT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENT10\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENT_05\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_priceAverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pricePoint\",\"type\":\"uint256\"}],\"name\":\"emitPriceUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"mcr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"mrf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_mcr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxRedemptionFeeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setTokenPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"tokenPriceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mcr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mrf\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"emitPriceUpdate(address,uint256,uint256)\":{\"details\":\"to set or change priceFeed contract for token\",\"params\":{\"_priceAverage\":\"time weighed price average\",\"_pricePoint\":\"last price recorded to moving average\",\"_token\":\"address of the token\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setTokenPriceFeed(address,address,uint256,uint256)\":{\"details\":\"to set or change priceFeed contract for token\",\"params\":{\"_maxRedemptionFeeBasisPoints\":\"maximum redemption fee in Basis Points or 100th of percent\",\"_mcr\":\"minimal collateral ratio of the token\",\"_priceFeed\":\"address of the PriceFeed contract for token\",\"_token\":\"address of the token\"}},\"tokenPrice(address)\":{\"details\":\"to get token price\",\"params\":{\"_token\":\"address of the token\"}},\"transferOwnership(address)\":{\"details\":\"transfers user's trove ownership after revoking other roles from other addresses\",\"params\":{\"_newOwner\":\"the address of the new owner\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token-to-price-feed.sol\":\"TokenToPriceFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\",\"keccak256\":\"0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/IOwnable.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ninterface IOwnable {\\n  /**\\n   * @dev Returns the address of the current owner.\\n   */\\n  function owner() external view returns (address);\\n\\n  /**\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n   * Can only be called by the current owner.\\n   */\\n  function transferOwnership(address newOwner) external;\\n}\\n\",\"keccak256\":\"0x955ead6c2a923863ba607a752e4a9924ab4fe4d07dd6cf09e5f68d0bece11049\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceFeed.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ninterface IPriceFeed {\\n  function token() external view returns (address);\\n\\n  function price() external view returns (uint256);\\n\\n  function pricePoint() external view returns (uint256);\\n\\n  function emitPriceSignal() external;\\n\\n  event PriceUpdate(address token, uint256 price, uint256 average);\\n}\\n\",\"keccak256\":\"0x57a011d8bc429249a622be078f750d045d2d9a1bb0b153968848cc8895eb02b3\",\"license\":\"MIT\"},\"contracts/interfaces/ITokenPriceFeed.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"./IOwnable.sol\\\";\\n\\ninterface ITokenPriceFeed is IOwnable {\\n  struct TokenInfo {\\n    address priceFeed;\\n    uint256 mcr;\\n    uint256 mrf; // Maximum Redemption Fee\\n  }\\n\\n  function tokenPriceFeed(address) external view returns (address);\\n\\n  function tokenPrice(address _token) external view returns (uint256);\\n\\n  function mcr(address _token) external view returns (uint256);\\n\\n  function mrf(address _token) external view returns (uint256);\\n\\n  function setTokenPriceFeed(\\n    address _token,\\n    address _priceFeed,\\n    uint256 _mcr,\\n    uint256 _maxRedemptionFeeBasisPoints\\n  ) external;\\n\\n  function emitPriceUpdate(\\n    address _token,\\n    uint256 _priceAverage,\\n    uint256 _pricePoint\\n  ) external;\\n\\n  event NewTokenPriceFeed(address _token, address _priceFeed, string _name, string _symbol, uint256 _mcr, uint256 _mrf);\\n  event PriceUpdate(address token, uint256 priceAverage, uint256 pricePoint);\\n}\\n\",\"keccak256\":\"0x1464b339e10e5bcdff774c69d9092696bc4e64c2a1fcbe66120fcdcd72d17a2d\",\"license\":\"MIT\"},\"contracts/token-to-price-feed.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC20Metadata.sol\\\";\\nimport \\\"./interfaces/IPriceFeed.sol\\\";\\nimport \\\"./utils/constants.sol\\\";\\nimport \\\"./interfaces/ITokenPriceFeed.sol\\\";\\n\\ncontract TokenToPriceFeed is Ownable, Constants, ITokenPriceFeed {\\n  // the token list is a mapping from Token address to Price Feed address\\n  mapping(address => TokenInfo) public tokens;\\n\\n  function owner() public view override(Ownable, IOwnable) returns (address) {\\n    return Ownable.owner();\\n  }\\n\\n  /// @dev to get token price\\n  /// @param  _token address of the token\\n  function tokenPrice(address _token) public view override returns (uint256) {\\n    return IPriceFeed(tokens[_token].priceFeed).price();\\n  }\\n\\n  function tokenPriceFeed(address _token) public view override returns (address) {\\n    return tokens[_token].priceFeed;\\n  }\\n\\n  function mcr(address _token) public view override returns (uint256) {\\n    return tokens[_token].mcr;\\n  }\\n\\n  function mrf(address _token) public view override returns (uint256) {\\n    return tokens[_token].mrf;\\n  }\\n\\n  /// @dev to set or change priceFeed contract for token\\n  /// @param  _token address of the token\\n  /// @param  _priceFeed address of the PriceFeed contract for token\\n  /// @param  _mcr minimal collateral ratio of the token\\n  /// @param  _maxRedemptionFeeBasisPoints maximum redemption fee in Basis Points or 100th of percent\\n  function setTokenPriceFeed(\\n    address _token,\\n    address _priceFeed,\\n    uint256 _mcr,\\n    uint256 _maxRedemptionFeeBasisPoints\\n  ) public override onlyOwner {\\n    require(_mcr >= 100, \\\"f0925e MCR < 100\\\");\\n    TokenInfo memory token = tokens[_token];\\n    token.priceFeed = _priceFeed;\\n    IERC20Metadata erc20 = IERC20Metadata(_token);\\n    token.mcr = (DECIMAL_PRECISION * _mcr) / 100;\\n    token.mrf = (_maxRedemptionFeeBasisPoints * DECIMAL_PRECISION) / 10000;\\n    emit NewTokenPriceFeed(_token, _priceFeed, erc20.name(), erc20.symbol(), token.mcr, token.mrf);\\n    tokens[_token] = token;\\n  }\\n\\n  /**\\n   * @dev transfers user's trove ownership after revoking other roles from other addresses\\n   * @param _newOwner the address of the new owner\\n   */\\n  function transferOwnership(address _newOwner) public override(Ownable, IOwnable) {\\n    Ownable.transferOwnership(_newOwner);\\n  }\\n\\n  /// @dev to set or change priceFeed contract for token\\n  /// @param  _token address of the token\\n  /// @param  _priceAverage time weighed price average\\n  /// @param  _pricePoint last price recorded to moving average\\n  function emitPriceUpdate(\\n    address _token,\\n    uint256 _priceAverage,\\n    uint256 _pricePoint\\n  ) external override {\\n    require(tokens[_token].priceFeed == msg.sender, \\\"e2b188 price feed not found in the list\\\");\\n    emit PriceUpdate(_token, _priceAverage, _pricePoint);\\n  }\\n}\\n\",\"keccak256\":\"0xe5bb99a5160ad0a03c6da44a6fdf1eab50979bd891352fc3c3453eec9f309355\",\"license\":\"MIT\"},\"contracts/utils/constants.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ncontract Constants {\\n  uint256 public constant DECIMAL_PRECISION = 1e18;\\n  uint256 public constant LIQUIDATION_RESERVE = 1e18;\\n  uint256 public constant MAX_INT = 2**256 - 1;\\n\\n  uint256 public constant PERCENT = (DECIMAL_PRECISION * 1) / 100; // 1%\\n  uint256 public constant PERCENT10 = PERCENT * 10; // 10%\\n  uint256 public constant PERCENT_05 = PERCENT / 2; // 0.5%\\n  uint256 public constant BORROWING_RATE = PERCENT_05;\\n  uint256 public constant MAX_BORROWING_RATE = (DECIMAL_PRECISION * 5) / 100; // 5%\\n}\\n\",\"keccak256\":\"0x6a665a01a9a7f729c66450e6b996c07ac47009851acacc6fcb11eb974ef20b5c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610b008061007e6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80639878cbb3116100a2578063aceb2d0411610071578063aceb2d0414610163578063ad09014d14610243578063b85a8b201461024b578063e486033914610253578063f2fde38b146102b257600080fd5b80639878cbb3146101e2578063a20baee6146101d3578063aa41911f1461020e578063abdc55411461023b57600080fd5b8063715018a6116100e9578063715018a6146101805780637533e3af1461018857806384ba3f691461019b5780638da5cb5b146101ae578063923c1eec146101d357600080fd5b80630904cdbc1461011b578063098d32281461015a578063517ef1d7146101635780636c37d51a1461016b575b600080fd5b610147610129366004610837565b6001600160a01b031660009081526001602052604090206002015490565b6040519081526020015b60405180910390f35b61014760001981565b6101476102c5565b61017e610179366004610859565b6102f3565b005b61017e610554565b61017e61019636600461089b565b61058a565b6101476101a9366004610837565b610652565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610151565b610147670de0b6b3a764000081565b6101bb6101f0366004610837565b6001600160a01b039081166000908152600160205260409020541690565b61014761021c366004610837565b6001600160a01b03166000908152600160208190526040909120015490565b6101476106d3565b6101476106e8565b610147610712565b61028d610261366004610837565b60016020819052600091825260409091208054918101546002909101546001600160a01b039092169183565b604080516001600160a01b039094168452602084019290925290820152606001610151565b61017e6102c0366004610837565b610727565b600260646102dc670de0b6b3a764000060016108ce565b6102e691906108f3565b6102f091906108f3565b81565b6000546001600160a01b031633146103265760405162461bcd60e51b815260040161031d90610915565b60405180910390fd5b606482101561036a5760405162461bcd60e51b815260206004820152601060248201526f0663039323565204d4352203c203130360841b604482015260640161031d565b6001600160a01b0380851660009081526001602081815260409283902083516060810185529281015491830191909152600201549181019190915290841681528460646103bf85670de0b6b3a76400006108ce565b6103c991906108f3565b60208301526127106103e3670de0b6b3a7640000856108ce565b6103ed91906108f3565b8260400181815250507f9f13c8c0d83723df8dd2e34f8a39d343529d3f799a507a7db48830002247d08f8686836001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610457573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261047f9190810190610984565b846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156104bd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104e59190810190610984565b8660200151876040015160405161050196959493929190610a5d565b60405180910390a1506001600160a01b03948516600090815260016020818152604092839020845181546001600160a01b0319169916989098178855830151908701550151600290940193909355505050565b6000546001600160a01b0316331461057e5760405162461bcd60e51b815260040161031d90610915565b6105886000610733565b565b6001600160a01b038381166000908152600160205260409020541633146106035760405162461bcd60e51b815260206004820152602760248201527f6532623138382070726963652066656564206e6f7420666f756e6420696e20746044820152661a19481b1a5cdd60ca1b606482015260840161031d565b604080516001600160a01b0385168152602081018490529081018290527fac7b695c6873047ad50339f850f4ae3f6b8f6ef63ed1a8b22f7d36a1c6bd46f39060600160405180910390a1505050565b6001600160a01b03808216600090815260016020908152604080832054815163501ad8ff60e11b815291519394169263a035b1fe926004808401939192918290030181865afa1580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd9190610ab1565b92915050565b60646102e6670de0b6b3a764000060056108ce565b60646106fd670de0b6b3a764000060016108ce565b61070791906108f3565b6102f090600a6108ce565b60646102e6670de0b6b3a764000060016108ce565b61073081610783565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146107ad5760405162461bcd60e51b815260040161031d90610915565b6001600160a01b0381166108125760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161031d565b61073081610733565b80356001600160a01b038116811461083257600080fd5b919050565b60006020828403121561084957600080fd5b6108528261081b565b9392505050565b6000806000806080858703121561086f57600080fd5b6108788561081b565b93506108866020860161081b565b93969395505050506040820135916060013590565b6000806000606084860312156108b057600080fd5b6108b98461081b565b95602085013595506040909401359392505050565b80820281158282048414176106cd57634e487b7160e01b600052601160045260246000fd5b60008261091057634e487b7160e01b600052601260045260246000fd5b500490565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561097b578181015183820152602001610963565b50506000910152565b60006020828403121561099657600080fd5b815167ffffffffffffffff808211156109ae57600080fd5b818401915084601f8301126109c257600080fd5b8151818111156109d4576109d461094a565b604051601f8201601f19908116603f011681019083821181831017156109fc576109fc61094a565b81604052828152876020848701011115610a1557600080fd5b610a26836020830160208801610960565b979650505050505050565b60008151808452610a49816020860160208601610960565b601f01601f19169290920160200192915050565b6001600160a01b0387811682528616602082015260c060408201819052600090610a8990830187610a31565b8281036060840152610a9b8187610a31565b6080840195909552505060a00152949350505050565b600060208284031215610ac357600080fd5b505191905056fea2646970667358221220ba87546661127447164efee14f7f494557b365de63821e921fea8e7b9f24f1ed64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80639878cbb3116100a2578063aceb2d0411610071578063aceb2d0414610163578063ad09014d14610243578063b85a8b201461024b578063e486033914610253578063f2fde38b146102b257600080fd5b80639878cbb3146101e2578063a20baee6146101d3578063aa41911f1461020e578063abdc55411461023b57600080fd5b8063715018a6116100e9578063715018a6146101805780637533e3af1461018857806384ba3f691461019b5780638da5cb5b146101ae578063923c1eec146101d357600080fd5b80630904cdbc1461011b578063098d32281461015a578063517ef1d7146101635780636c37d51a1461016b575b600080fd5b610147610129366004610837565b6001600160a01b031660009081526001602052604090206002015490565b6040519081526020015b60405180910390f35b61014760001981565b6101476102c5565b61017e610179366004610859565b6102f3565b005b61017e610554565b61017e61019636600461089b565b61058a565b6101476101a9366004610837565b610652565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610151565b610147670de0b6b3a764000081565b6101bb6101f0366004610837565b6001600160a01b039081166000908152600160205260409020541690565b61014761021c366004610837565b6001600160a01b03166000908152600160208190526040909120015490565b6101476106d3565b6101476106e8565b610147610712565b61028d610261366004610837565b60016020819052600091825260409091208054918101546002909101546001600160a01b039092169183565b604080516001600160a01b039094168452602084019290925290820152606001610151565b61017e6102c0366004610837565b610727565b600260646102dc670de0b6b3a764000060016108ce565b6102e691906108f3565b6102f091906108f3565b81565b6000546001600160a01b031633146103265760405162461bcd60e51b815260040161031d90610915565b60405180910390fd5b606482101561036a5760405162461bcd60e51b815260206004820152601060248201526f0663039323565204d4352203c203130360841b604482015260640161031d565b6001600160a01b0380851660009081526001602081815260409283902083516060810185529281015491830191909152600201549181019190915290841681528460646103bf85670de0b6b3a76400006108ce565b6103c991906108f3565b60208301526127106103e3670de0b6b3a7640000856108ce565b6103ed91906108f3565b8260400181815250507f9f13c8c0d83723df8dd2e34f8a39d343529d3f799a507a7db48830002247d08f8686836001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610457573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261047f9190810190610984565b846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156104bd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104e59190810190610984565b8660200151876040015160405161050196959493929190610a5d565b60405180910390a1506001600160a01b03948516600090815260016020818152604092839020845181546001600160a01b0319169916989098178855830151908701550151600290940193909355505050565b6000546001600160a01b0316331461057e5760405162461bcd60e51b815260040161031d90610915565b6105886000610733565b565b6001600160a01b038381166000908152600160205260409020541633146106035760405162461bcd60e51b815260206004820152602760248201527f6532623138382070726963652066656564206e6f7420666f756e6420696e20746044820152661a19481b1a5cdd60ca1b606482015260840161031d565b604080516001600160a01b0385168152602081018490529081018290527fac7b695c6873047ad50339f850f4ae3f6b8f6ef63ed1a8b22f7d36a1c6bd46f39060600160405180910390a1505050565b6001600160a01b03808216600090815260016020908152604080832054815163501ad8ff60e11b815291519394169263a035b1fe926004808401939192918290030181865afa1580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd9190610ab1565b92915050565b60646102e6670de0b6b3a764000060056108ce565b60646106fd670de0b6b3a764000060016108ce565b61070791906108f3565b6102f090600a6108ce565b60646102e6670de0b6b3a764000060016108ce565b61073081610783565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146107ad5760405162461bcd60e51b815260040161031d90610915565b6001600160a01b0381166108125760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161031d565b61073081610733565b80356001600160a01b038116811461083257600080fd5b919050565b60006020828403121561084957600080fd5b6108528261081b565b9392505050565b6000806000806080858703121561086f57600080fd5b6108788561081b565b93506108866020860161081b565b93969395505050506040820135916060013590565b6000806000606084860312156108b057600080fd5b6108b98461081b565b95602085013595506040909401359392505050565b80820281158282048414176106cd57634e487b7160e01b600052601160045260246000fd5b60008261091057634e487b7160e01b600052601260045260246000fd5b500490565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561097b578181015183820152602001610963565b50506000910152565b60006020828403121561099657600080fd5b815167ffffffffffffffff808211156109ae57600080fd5b818401915084601f8301126109c257600080fd5b8151818111156109d4576109d461094a565b604051601f8201601f19908116603f011681019083821181831017156109fc576109fc61094a565b81604052828152876020848701011115610a1557600080fd5b610a26836020830160208801610960565b979650505050505050565b60008151808452610a49816020860160208601610960565b601f01601f19169290920160200192915050565b6001600160a01b0387811682528616602082015260c060408201819052600090610a8990830187610a31565b8281036060840152610a9b8187610a31565b6080840195909552505060a00152949350505050565b600060208284031215610ac357600080fd5b505191905056fea2646970667358221220ba87546661127447164efee14f7f494557b365de63821e921fea8e7b9f24f1ed64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "emitPriceUpdate(address,uint256,uint256)": {
        "details": "to set or change priceFeed contract for token",
        "params": {
          "_priceAverage": "time weighed price average",
          "_pricePoint": "last price recorded to moving average",
          "_token": "address of the token"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setTokenPriceFeed(address,address,uint256,uint256)": {
        "details": "to set or change priceFeed contract for token",
        "params": {
          "_maxRedemptionFeeBasisPoints": "maximum redemption fee in Basis Points or 100th of percent",
          "_mcr": "minimal collateral ratio of the token",
          "_priceFeed": "address of the PriceFeed contract for token",
          "_token": "address of the token"
        }
      },
      "tokenPrice(address)": {
        "details": "to get token price",
        "params": {
          "_token": "address of the token"
        }
      },
      "transferOwnership(address)": {
        "details": "transfers user's trove ownership after revoking other roles from other addresses",
        "params": {
          "_newOwner": "the address of the new owner"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2054,
        "contract": "contracts/token-to-price-feed.sol:TokenToPriceFeed",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 14634,
        "contract": "contracts/token-to-price-feed.sol:TokenToPriceFeed",
        "label": "tokens",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(TokenInfo)8980_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(TokenInfo)8980_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ITokenPriceFeed.TokenInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(TokenInfo)8980_storage"
      },
      "t_struct(TokenInfo)8980_storage": {
        "encoding": "inplace",
        "label": "struct ITokenPriceFeed.TokenInfo",
        "members": [
          {
            "astId": 8975,
            "contract": "contracts/token-to-price-feed.sol:TokenToPriceFeed",
            "label": "priceFeed",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 8977,
            "contract": "contracts/token-to-price-feed.sol:TokenToPriceFeed",
            "label": "mcr",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 8979,
            "contract": "contracts/token-to-price-feed.sol:TokenToPriceFeed",
            "label": "mrf",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}