{
  "address": "0xaBb944b09481583C16306858253c81125A179185",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "average",
          "type": "uint256"
        }
      ],
      "name": "PriceUpdate",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BORROWING_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DECIMAL_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIQUIDATION_RESERVE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_BORROWING_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_INT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERCENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERCENT10",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERCENT_05",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emitPriceSignal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isToken0",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "precision",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract IPriceFeed",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pricePoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "contract IArrakisVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x5ec08a6bf3fd5e108a36ff3870fbc18f434676fcfef5e62f20549896863ca7f4",
  "receipt": {
    "to": null,
    "from": "0xC74BEd4d5b1110458d954e772272Bc05859b81bD",
    "contractAddress": "0xaBb944b09481583C16306858253c81125A179185",
    "transactionIndex": 30,
    "gasUsed": "432832",
    "logsBloom": "0x
    "blockHash": "0xd89dec019945d99c7f808f8de6c89e9a1f05b3f6ce27afa31f0ea7d5b3121fa5",
    "transactionHash": "0x5ec08a6bf3fd5e108a36ff3870fbc18f434676fcfef5e62f20549896863ca7f4",
    "logs": [
      {
        "transactionIndex": 30,
        "blockNumber": 37940881,
        "transactionHash": "0x5ec08a6bf3fd5e108a36ff3870fbc18f434676fcfef5e62f20549896863ca7f4",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000c74bed4d5b1110458d954e772272bc05859b81bd",
          "0x000000000000000000000000f0245f6251bef9447a08766b9da2b07b28ad80b0"
        ],
        "data": "0x000000000000000000000000000000000000000000000000003157e0bd4cc4000000000000000000000000000000000000000000000000061a78059695f14c6b0000000000000000000000000000000000000000000000c021e5004b2b67a3a50000000000000000000000000000000000000000000000061a46adb5d8a4886b0000000000000000000000000000000000000000000000c02216582be8b467a5",
        "logIndex": 95,
        "blockHash": "0xd89dec019945d99c7f808f8de6c89e9a1f05b3f6ce27afa31f0ea7d5b3121fa5"
      }
    ],
    "blockNumber": 37940881,
    "cumulativeGasUsed": "4546616",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8B8533471920231Acca16104a0c81fA50D8C9a53",
    "0x686599c91F29F5CaD303cb4DB354458B23ea4eb1"
  ],
  "numDeployments": 1,
  "solcInputHash": "156c4eabd7f481204bd1d14bea565608",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"average\",\"type\":\"uint256\"}],\"name\":\"PriceUpdate\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BORROWING_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DECIMAL_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDATION_RESERVE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BORROWING_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_INT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENT10\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENT_05\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emitPriceSignal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isToken0\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precision\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract IPriceFeed\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pricePoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IArrakisVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/price-feeds/arrakis-vault-price-feed.sol\":\"ArrakisVaultPriceFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorInterface {\\n  function latestAnswer() external view returns (int256);\\n\\n  function latestTimestamp() external view returns (uint256);\\n\\n  function latestRound() external view returns (uint256);\\n\\n  function getAnswer(uint256 roundId) external view returns (int256);\\n\\n  function getTimestamp(uint256 roundId) external view returns (uint256);\\n\\n  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 updatedAt);\\n\\n  event NewRound(uint256 indexed roundId, address indexed startedBy, uint256 startedAt);\\n}\\n\",\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AggregatorInterface.sol\\\";\\nimport \\\"./AggregatorV3Interface.sol\\\";\\n\\ninterface AggregatorV2V3Interface is AggregatorInterface, AggregatorV3Interface {}\\n\",\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\",\"keccak256\":\"0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/interfaces/IOwnable.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ninterface IOwnable {\\n  /**\\n   * @dev Returns the address of the current owner.\\n   */\\n  function owner() external view returns (address);\\n\\n  /**\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n   * Can only be called by the current owner.\\n   */\\n  function transferOwnership(address newOwner) external;\\n}\\n\",\"keccak256\":\"0x955ead6c2a923863ba607a752e4a9924ab4fe4d07dd6cf09e5f68d0bece11049\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceFeed.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ninterface IPriceFeed {\\n  function token() external view returns (address);\\n\\n  function price() external view returns (uint256);\\n\\n  function pricePoint() external view returns (uint256);\\n\\n  function emitPriceSignal() external;\\n\\n  event PriceUpdate(address token, uint256 price, uint256 average);\\n}\\n\",\"keccak256\":\"0x57a011d8bc429249a622be078f750d045d2d9a1bb0b153968848cc8895eb02b3\",\"license\":\"MIT\"},\"contracts/interfaces/ITokenPriceFeed.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"./IOwnable.sol\\\";\\n\\ninterface ITokenPriceFeed is IOwnable {\\n  struct TokenInfo {\\n    address priceFeed;\\n    uint256 mcr;\\n    uint256 mrf; // Maximum Redemption Fee\\n  }\\n\\n  function tokenPriceFeed(address) external view returns (address);\\n\\n  function tokenPrice(address _token) external view returns (uint256);\\n\\n  function mcr(address _token) external view returns (uint256);\\n\\n  function mrf(address _token) external view returns (uint256);\\n\\n  function setTokenPriceFeed(\\n    address _token,\\n    address _priceFeed,\\n    uint256 _mcr,\\n    uint256 _maxRedemptionFeeBasisPoints\\n  ) external;\\n\\n  function emitPriceUpdate(\\n    address _token,\\n    uint256 _priceAverage,\\n    uint256 _pricePoint\\n  ) external;\\n\\n  event NewTokenPriceFeed(address _token, address _priceFeed, string _name, string _symbol, uint256 _mcr, uint256 _mrf);\\n  event PriceUpdate(address token, uint256 priceAverage, uint256 pricePoint);\\n}\\n\",\"keccak256\":\"0x1464b339e10e5bcdff774c69d9092696bc4e64c2a1fcbe66120fcdcd72d17a2d\",\"license\":\"MIT\"},\"contracts/price-feeds/arrakis-vault-price-feed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC20Metadata.sol\\\";\\nimport \\\"./chainlink-price-feed.sol\\\";\\n\\ninterface IArrakisVault is IERC20 {\\n  function getUnderlyingBalances() external view returns (uint256 amount0Current, uint256 amount1Current);\\n\\n  function token0() external view returns (address);\\n}\\n\\ncontract ArrakisVaultPriceFeed is IPriceFeed, Constants {\\n  IArrakisVault public immutable vault;\\n  // token must be implemented by pricefeed and it will be cheapest as an immutable\\n  address public immutable override token;\\n  IPriceFeed public immutable priceFeed;\\n  bool public immutable isToken0;\\n  uint256 public immutable precision;\\n\\n  constructor(address _vault, address _priceFeed) {\\n    require(_vault != address(0x0), \\\"e2637b vault must not be address 0x0\\\");\\n    require(_priceFeed != address(0x0), \\\"e2637b priceFeed must not be address 0x0\\\");\\n    vault = IArrakisVault(_vault);\\n    address _token = IPriceFeed(_priceFeed).token();\\n    token = _vault;\\n    priceFeed = IPriceFeed(_priceFeed);\\n    isToken0 = IArrakisVault(_vault).token0() == _token;\\n    precision = 10**IERC20Metadata(_token).decimals();\\n  }\\n\\n  function price() public view override returns (uint256) {\\n    uint256 avTokenSupply = vault.totalSupply();\\n    (uint256 t0Balance, uint256 t1Balance) = vault.getUnderlyingBalances();\\n    // normalise balance to 18 decimals\\n    uint256 tBalance = ((isToken0 ? t0Balance : t1Balance) * DECIMAL_PRECISION) / precision;\\n    return (priceFeed.price() * tBalance) / avTokenSupply;\\n  }\\n\\n  function pricePoint() public view override returns (uint256) {\\n    return price();\\n  }\\n\\n  function emitPriceSignal() public {\\n    emit PriceUpdate(token, price(), price());\\n  }\\n}\\n\",\"keccak256\":\"0xfd09058d58c301dec798d0ed667f057cbe274c745472bc1a2b173b08a67e97c7\",\"license\":\"MIT\"},\"contracts/price-feeds/chainlink-price-feed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\\\";\\nimport \\\"../interfaces/IPriceFeed.sol\\\";\\nimport \\\"../interfaces/ITokenPriceFeed.sol\\\";\\nimport \\\"../utils/constants.sol\\\";\\n\\ncontract ChainlinkPriceFeed is IPriceFeed, Constants {\\n  AggregatorV2V3Interface public immutable oracle;\\n  address public immutable override token;\\n  uint256 public immutable precision;\\n\\n  constructor(address _oracle, address _token) {\\n    require(_oracle != address(0x0), \\\"e2637b _oracle must not be address 0x0\\\");\\n    require(_token != address(0x0), \\\"e2637b _token must not be address 0x0\\\");\\n    token = _token;\\n    oracle = AggregatorV2V3Interface(_oracle);\\n    uint8 decimals = oracle.decimals();\\n    require(decimals > 0, \\\"e2637b decimals must be a positive number\\\");\\n    precision = 10**decimals;\\n  }\\n\\n  function price() public view virtual override returns (uint256) {\\n    return (uint256(oracle.latestAnswer()) * DECIMAL_PRECISION) / precision;\\n  }\\n\\n  function pricePoint() public view override returns (uint256) {\\n    return price();\\n  }\\n\\n  function emitPriceSignal() public override {\\n    emit PriceUpdate(token, price(), price());\\n  }\\n}\\n\",\"keccak256\":\"0xff13731d700edadd8bf2b9c853e33cc84d5376ba699ecc413a70c7a0e0763f8f\",\"license\":\"MIT\"},\"contracts/utils/constants.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ncontract Constants {\\n  uint256 public constant DECIMAL_PRECISION = 1e18;\\n  uint256 public constant LIQUIDATION_RESERVE = 1e18;\\n  uint256 public constant MAX_INT = 2**256 - 1;\\n\\n  uint256 public constant PERCENT = (DECIMAL_PRECISION * 1) / 100; // 1%\\n  uint256 public constant PERCENT10 = PERCENT * 10; // 10%\\n  uint256 public constant PERCENT_05 = PERCENT / 2; // 0.5%\\n  uint256 public constant BORROWING_RATE = PERCENT_05;\\n  uint256 public constant MAX_BORROWING_RATE = (DECIMAL_PRECISION * 5) / 100; // 5%\\n}\\n\",\"keccak256\":\"0x6a665a01a9a7f729c66450e6b996c07ac47009851acacc6fcb11eb974ef20b5c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101206040523480156200001257600080fd5b5060405162000b0d38038062000b0d8339810160408190526200003591620002b9565b6001600160a01b0382166200009d5760405162461bcd60e51b8152602060048201526024808201527f653236333762207661756c74206d757374206e6f7420626520616464726573736044820152630203078360e41b60648201526084015b60405180910390fd5b6001600160a01b038116620001065760405162461bcd60e51b815260206004820152602860248201527f65323633376220707269636546656564206d757374206e6f7420626520616464604482015267072657373203078360c41b606482015260840162000094565b816001600160a01b03166080816001600160a01b0316815250506000816001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000161573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001879190620002f1565b6001600160a01b0380851660a081905284821660c05260408051630dfe168160e01b81529051939450918416929091630dfe16819160048083019260209291908290030181865afa158015620001e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002079190620002f1565b6001600160a01b031614151560e081151581525050806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000281919062000316565b6200028e90600a62000450565b610100525062000461915050565b80516001600160a01b0381168114620002b457600080fd5b919050565b60008060408385031215620002cd57600080fd5b620002d8836200029c565b9150620002e8602084016200029c565b90509250929050565b6000602082840312156200030457600080fd5b6200030f826200029c565b9392505050565b6000602082840312156200032957600080fd5b815160ff811681146200030f57600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003925781600019048211156200037657620003766200033b565b808516156200038457918102915b93841c939080029062000356565b509250929050565b600082620003ab575060016200044a565b81620003ba575060006200044a565b8160018114620003d35760028114620003de57620003fe565b60019150506200044a565b60ff841115620003f257620003f26200033b565b50506001821b6200044a565b5060208310610133831016604e8410600b841016171562000423575081810a6200044a565b6200042f838362000351565b80600019048211156200044657620004466200033b565b0290505b92915050565b60006200030f60ff8416836200039a565b60805160a05160c05160e0516101005161063d620004d0600039600081816101ae01526103a50152600081816101d501526103cf01526000818161012e015261041401526000818161023301526104d401526000818161020c01528181610297015261031e015261063d6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063abdc554111610097578063d3b5dc3b11610066578063d3b5dc3b146101a9578063dcf93f32146101d0578063fbfa77cf14610207578063fc0c546a1461022e57600080fd5b8063abdc554114610191578063aceb2d0414610121578063ad09014d14610199578063b85a8b20146101a157600080fd5b8063a013991c116100d3578063a013991c14610177578063a035b1fe1461017f578063a20baee614610168578063ab96f86a1461018757600080fd5b8063098d322814610105578063517ef1d714610121578063741bef1a14610129578063923c1eec14610168575b600080fd5b61010e60001981565b6040519081526020015b60405180910390f35b61010e610255565b6101507f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610118565b61010e670de0b6b3a764000081565b61010e610283565b61010e610292565b61018f6104b1565b005b61010e61052d565b61010e610542565b61010e61056c565b61010e7f000000000000000000000000000000000000000000000000000000000000000081565b6101f77f000000000000000000000000000000000000000000000000000000000000000081565b6040519015158152602001610118565b6101507f000000000000000000000000000000000000000000000000000000000000000081565b6101507f000000000000000000000000000000000000000000000000000000000000000081565b6002606461026c670de0b6b3a7640000600161057d565b61027691906105a8565b61028091906105a8565b81565b600061028d610292565b905090565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031791906105ca565b90506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631322d9546040518163ffffffff1660e01b81526004016040805180830381865afa158015610379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039d91906105e3565b9150915060007f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a76400007f00000000000000000000000000000000000000000000000000000000000000006103f857836103fa565b845b610404919061057d565b61040e91906105a8565b905083817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a035b1fe6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610470573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049491906105ca565b61049e919061057d565b6104a891906105a8565b94505050505090565b7fac7b695c6873047ad50339f850f4ae3f6b8f6ef63ed1a8b22f7d36a1c6bd46f37f00000000000000000000000000000000000000000000000000000000000000006104fb610292565b610503610292565b604080516001600160a01b03909416845260208401929092529082015260600160405180910390a1565b6064610276670de0b6b3a7640000600561057d565b6064610557670de0b6b3a7640000600161057d565b61056191906105a8565b61028090600a61057d565b6064610276670de0b6b3a764000060015b80820281158282048414176105a257634e487b7160e01b600052601160045260246000fd5b92915050565b6000826105c557634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156105dc57600080fd5b5051919050565b600080604083850312156105f657600080fd5b50508051602090910151909290915056fea2646970667358221220b9e9f32a27c2c9f3bc45dc2ee3b458dc5528cb98eec785ecb682613975d4964d64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c8063abdc554111610097578063d3b5dc3b11610066578063d3b5dc3b146101a9578063dcf93f32146101d0578063fbfa77cf14610207578063fc0c546a1461022e57600080fd5b8063abdc554114610191578063aceb2d0414610121578063ad09014d14610199578063b85a8b20146101a157600080fd5b8063a013991c116100d3578063a013991c14610177578063a035b1fe1461017f578063a20baee614610168578063ab96f86a1461018757600080fd5b8063098d322814610105578063517ef1d714610121578063741bef1a14610129578063923c1eec14610168575b600080fd5b61010e60001981565b6040519081526020015b60405180910390f35b61010e610255565b6101507f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610118565b61010e670de0b6b3a764000081565b61010e610283565b61010e610292565b61018f6104b1565b005b61010e61052d565b61010e610542565b61010e61056c565b61010e7f000000000000000000000000000000000000000000000000000000000000000081565b6101f77f000000000000000000000000000000000000000000000000000000000000000081565b6040519015158152602001610118565b6101507f000000000000000000000000000000000000000000000000000000000000000081565b6101507f000000000000000000000000000000000000000000000000000000000000000081565b6002606461026c670de0b6b3a7640000600161057d565b61027691906105a8565b61028091906105a8565b81565b600061028d610292565b905090565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031791906105ca565b90506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631322d9546040518163ffffffff1660e01b81526004016040805180830381865afa158015610379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039d91906105e3565b9150915060007f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a76400007f00000000000000000000000000000000000000000000000000000000000000006103f857836103fa565b845b610404919061057d565b61040e91906105a8565b905083817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a035b1fe6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610470573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049491906105ca565b61049e919061057d565b6104a891906105a8565b94505050505090565b7fac7b695c6873047ad50339f850f4ae3f6b8f6ef63ed1a8b22f7d36a1c6bd46f37f00000000000000000000000000000000000000000000000000000000000000006104fb610292565b610503610292565b604080516001600160a01b03909416845260208401929092529082015260600160405180910390a1565b6064610276670de0b6b3a7640000600561057d565b6064610557670de0b6b3a7640000600161057d565b61056191906105a8565b61028090600a61057d565b6064610276670de0b6b3a764000060015b80820281158282048414176105a257634e487b7160e01b600052601160045260246000fd5b92915050565b6000826105c557634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156105dc57600080fd5b5051919050565b600080604083850312156105f657600080fd5b50508051602090910151909290915056fea2646970667358221220b9e9f32a27c2c9f3bc45dc2ee3b458dc5528cb98eec785ecb682613975d4964d64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}